
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Lead` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Lead
 * 
 */
export type LeadModel = runtime.Types.Result.DefaultSelection<Prisma.$LeadPayload>

export type AggregateLead = {
  _count: LeadCountAggregateOutputType | null
  _min: LeadMinAggregateOutputType | null
  _max: LeadMaxAggregateOutputType | null
}

export type LeadMinAggregateOutputType = {
  id: string | null
  searchHistoryId: string | null
  firstName: string | null
  lastName: string | null
  email: string | null
  personalEmail: string | null
  fullName: string | null
  jobTitle: string | null
  linkedin: string | null
  companyName: string | null
  companyWebsite: string | null
  industry: string | null
  companySize: string | null
  headline: string | null
  seniorityLevel: string | null
  functionalLevel: string | null
  city: string | null
  state: string | null
  country: string | null
  companyLinkedin: string | null
  companyLinkedinUid: string | null
  companyFoundedYear: string | null
  companyDomain: string | null
  companyPhone: string | null
  companyStreetAddress: string | null
  companyFullAddress: string | null
  companyState: string | null
  companyCity: string | null
  companyCountry: string | null
  companyPostalCode: string | null
  keywords: string | null
  companyDescription: string | null
  companyAnnualRevenue: string | null
  companyAnnualRevenueClean: string | null
  companyTotalFunding: string | null
  companyTotalFundingClean: string | null
  companyTechnologies: string | null
}

export type LeadMaxAggregateOutputType = {
  id: string | null
  searchHistoryId: string | null
  firstName: string | null
  lastName: string | null
  email: string | null
  personalEmail: string | null
  fullName: string | null
  jobTitle: string | null
  linkedin: string | null
  companyName: string | null
  companyWebsite: string | null
  industry: string | null
  companySize: string | null
  headline: string | null
  seniorityLevel: string | null
  functionalLevel: string | null
  city: string | null
  state: string | null
  country: string | null
  companyLinkedin: string | null
  companyLinkedinUid: string | null
  companyFoundedYear: string | null
  companyDomain: string | null
  companyPhone: string | null
  companyStreetAddress: string | null
  companyFullAddress: string | null
  companyState: string | null
  companyCity: string | null
  companyCountry: string | null
  companyPostalCode: string | null
  keywords: string | null
  companyDescription: string | null
  companyAnnualRevenue: string | null
  companyAnnualRevenueClean: string | null
  companyTotalFunding: string | null
  companyTotalFundingClean: string | null
  companyTechnologies: string | null
}

export type LeadCountAggregateOutputType = {
  id: number
  searchHistoryId: number
  firstName: number
  lastName: number
  email: number
  personalEmail: number
  fullName: number
  jobTitle: number
  linkedin: number
  companyName: number
  companyWebsite: number
  industry: number
  companySize: number
  headline: number
  seniorityLevel: number
  functionalLevel: number
  city: number
  state: number
  country: number
  companyLinkedin: number
  companyLinkedinUid: number
  companyFoundedYear: number
  companyDomain: number
  companyPhone: number
  companyStreetAddress: number
  companyFullAddress: number
  companyState: number
  companyCity: number
  companyCountry: number
  companyPostalCode: number
  keywords: number
  companyDescription: number
  companyAnnualRevenue: number
  companyAnnualRevenueClean: number
  companyTotalFunding: number
  companyTotalFundingClean: number
  companyTechnologies: number
  _all: number
}


export type LeadMinAggregateInputType = {
  id?: true
  searchHistoryId?: true
  firstName?: true
  lastName?: true
  email?: true
  personalEmail?: true
  fullName?: true
  jobTitle?: true
  linkedin?: true
  companyName?: true
  companyWebsite?: true
  industry?: true
  companySize?: true
  headline?: true
  seniorityLevel?: true
  functionalLevel?: true
  city?: true
  state?: true
  country?: true
  companyLinkedin?: true
  companyLinkedinUid?: true
  companyFoundedYear?: true
  companyDomain?: true
  companyPhone?: true
  companyStreetAddress?: true
  companyFullAddress?: true
  companyState?: true
  companyCity?: true
  companyCountry?: true
  companyPostalCode?: true
  keywords?: true
  companyDescription?: true
  companyAnnualRevenue?: true
  companyAnnualRevenueClean?: true
  companyTotalFunding?: true
  companyTotalFundingClean?: true
  companyTechnologies?: true
}

export type LeadMaxAggregateInputType = {
  id?: true
  searchHistoryId?: true
  firstName?: true
  lastName?: true
  email?: true
  personalEmail?: true
  fullName?: true
  jobTitle?: true
  linkedin?: true
  companyName?: true
  companyWebsite?: true
  industry?: true
  companySize?: true
  headline?: true
  seniorityLevel?: true
  functionalLevel?: true
  city?: true
  state?: true
  country?: true
  companyLinkedin?: true
  companyLinkedinUid?: true
  companyFoundedYear?: true
  companyDomain?: true
  companyPhone?: true
  companyStreetAddress?: true
  companyFullAddress?: true
  companyState?: true
  companyCity?: true
  companyCountry?: true
  companyPostalCode?: true
  keywords?: true
  companyDescription?: true
  companyAnnualRevenue?: true
  companyAnnualRevenueClean?: true
  companyTotalFunding?: true
  companyTotalFundingClean?: true
  companyTechnologies?: true
}

export type LeadCountAggregateInputType = {
  id?: true
  searchHistoryId?: true
  firstName?: true
  lastName?: true
  email?: true
  personalEmail?: true
  fullName?: true
  jobTitle?: true
  linkedin?: true
  companyName?: true
  companyWebsite?: true
  industry?: true
  companySize?: true
  headline?: true
  seniorityLevel?: true
  functionalLevel?: true
  city?: true
  state?: true
  country?: true
  companyLinkedin?: true
  companyLinkedinUid?: true
  companyFoundedYear?: true
  companyDomain?: true
  companyPhone?: true
  companyStreetAddress?: true
  companyFullAddress?: true
  companyState?: true
  companyCity?: true
  companyCountry?: true
  companyPostalCode?: true
  keywords?: true
  companyDescription?: true
  companyAnnualRevenue?: true
  companyAnnualRevenueClean?: true
  companyTotalFunding?: true
  companyTotalFundingClean?: true
  companyTechnologies?: true
  _all?: true
}

export type LeadAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Lead to aggregate.
   */
  where?: Prisma.LeadWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Leads to fetch.
   */
  orderBy?: Prisma.LeadOrderByWithRelationInput | Prisma.LeadOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.LeadWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Leads from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Leads.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Leads
  **/
  _count?: true | LeadCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: LeadMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: LeadMaxAggregateInputType
}

export type GetLeadAggregateType<T extends LeadAggregateArgs> = {
      [P in keyof T & keyof AggregateLead]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateLead[P]>
    : Prisma.GetScalarType<T[P], AggregateLead[P]>
}




export type LeadGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.LeadWhereInput
  orderBy?: Prisma.LeadOrderByWithAggregationInput | Prisma.LeadOrderByWithAggregationInput[]
  by: Prisma.LeadScalarFieldEnum[] | Prisma.LeadScalarFieldEnum
  having?: Prisma.LeadScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: LeadCountAggregateInputType | true
  _min?: LeadMinAggregateInputType
  _max?: LeadMaxAggregateInputType
}

export type LeadGroupByOutputType = {
  id: string
  searchHistoryId: string
  firstName: string | null
  lastName: string | null
  email: string | null
  personalEmail: string | null
  fullName: string | null
  jobTitle: string | null
  linkedin: string | null
  companyName: string | null
  companyWebsite: string | null
  industry: string | null
  companySize: string | null
  headline: string | null
  seniorityLevel: string | null
  functionalLevel: string | null
  city: string | null
  state: string | null
  country: string | null
  companyLinkedin: string | null
  companyLinkedinUid: string | null
  companyFoundedYear: string | null
  companyDomain: string | null
  companyPhone: string | null
  companyStreetAddress: string | null
  companyFullAddress: string | null
  companyState: string | null
  companyCity: string | null
  companyCountry: string | null
  companyPostalCode: string | null
  keywords: string | null
  companyDescription: string | null
  companyAnnualRevenue: string | null
  companyAnnualRevenueClean: string | null
  companyTotalFunding: string | null
  companyTotalFundingClean: string | null
  companyTechnologies: string | null
  _count: LeadCountAggregateOutputType | null
  _min: LeadMinAggregateOutputType | null
  _max: LeadMaxAggregateOutputType | null
}

type GetLeadGroupByPayload<T extends LeadGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<LeadGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof LeadGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], LeadGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], LeadGroupByOutputType[P]>
      }
    >
  >



export type LeadWhereInput = {
  AND?: Prisma.LeadWhereInput | Prisma.LeadWhereInput[]
  OR?: Prisma.LeadWhereInput[]
  NOT?: Prisma.LeadWhereInput | Prisma.LeadWhereInput[]
  id?: Prisma.StringFilter<"Lead"> | string
  searchHistoryId?: Prisma.StringFilter<"Lead"> | string
  firstName?: Prisma.StringNullableFilter<"Lead"> | string | null
  lastName?: Prisma.StringNullableFilter<"Lead"> | string | null
  email?: Prisma.StringNullableFilter<"Lead"> | string | null
  personalEmail?: Prisma.StringNullableFilter<"Lead"> | string | null
  fullName?: Prisma.StringNullableFilter<"Lead"> | string | null
  jobTitle?: Prisma.StringNullableFilter<"Lead"> | string | null
  linkedin?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyName?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyWebsite?: Prisma.StringNullableFilter<"Lead"> | string | null
  industry?: Prisma.StringNullableFilter<"Lead"> | string | null
  companySize?: Prisma.StringNullableFilter<"Lead"> | string | null
  headline?: Prisma.StringNullableFilter<"Lead"> | string | null
  seniorityLevel?: Prisma.StringNullableFilter<"Lead"> | string | null
  functionalLevel?: Prisma.StringNullableFilter<"Lead"> | string | null
  city?: Prisma.StringNullableFilter<"Lead"> | string | null
  state?: Prisma.StringNullableFilter<"Lead"> | string | null
  country?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyLinkedin?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyLinkedinUid?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyFoundedYear?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyDomain?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyPhone?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyStreetAddress?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyFullAddress?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyState?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyCity?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyCountry?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyPostalCode?: Prisma.StringNullableFilter<"Lead"> | string | null
  keywords?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyDescription?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyAnnualRevenue?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyAnnualRevenueClean?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyTotalFunding?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyTotalFundingClean?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyTechnologies?: Prisma.StringNullableFilter<"Lead"> | string | null
  searchHistory?: Prisma.XOR<Prisma.SearchHistoryScalarRelationFilter, Prisma.SearchHistoryWhereInput>
}

export type LeadOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  searchHistoryId?: Prisma.SortOrder
  firstName?: Prisma.SortOrderInput | Prisma.SortOrder
  lastName?: Prisma.SortOrderInput | Prisma.SortOrder
  email?: Prisma.SortOrderInput | Prisma.SortOrder
  personalEmail?: Prisma.SortOrderInput | Prisma.SortOrder
  fullName?: Prisma.SortOrderInput | Prisma.SortOrder
  jobTitle?: Prisma.SortOrderInput | Prisma.SortOrder
  linkedin?: Prisma.SortOrderInput | Prisma.SortOrder
  companyName?: Prisma.SortOrderInput | Prisma.SortOrder
  companyWebsite?: Prisma.SortOrderInput | Prisma.SortOrder
  industry?: Prisma.SortOrderInput | Prisma.SortOrder
  companySize?: Prisma.SortOrderInput | Prisma.SortOrder
  headline?: Prisma.SortOrderInput | Prisma.SortOrder
  seniorityLevel?: Prisma.SortOrderInput | Prisma.SortOrder
  functionalLevel?: Prisma.SortOrderInput | Prisma.SortOrder
  city?: Prisma.SortOrderInput | Prisma.SortOrder
  state?: Prisma.SortOrderInput | Prisma.SortOrder
  country?: Prisma.SortOrderInput | Prisma.SortOrder
  companyLinkedin?: Prisma.SortOrderInput | Prisma.SortOrder
  companyLinkedinUid?: Prisma.SortOrderInput | Prisma.SortOrder
  companyFoundedYear?: Prisma.SortOrderInput | Prisma.SortOrder
  companyDomain?: Prisma.SortOrderInput | Prisma.SortOrder
  companyPhone?: Prisma.SortOrderInput | Prisma.SortOrder
  companyStreetAddress?: Prisma.SortOrderInput | Prisma.SortOrder
  companyFullAddress?: Prisma.SortOrderInput | Prisma.SortOrder
  companyState?: Prisma.SortOrderInput | Prisma.SortOrder
  companyCity?: Prisma.SortOrderInput | Prisma.SortOrder
  companyCountry?: Prisma.SortOrderInput | Prisma.SortOrder
  companyPostalCode?: Prisma.SortOrderInput | Prisma.SortOrder
  keywords?: Prisma.SortOrderInput | Prisma.SortOrder
  companyDescription?: Prisma.SortOrderInput | Prisma.SortOrder
  companyAnnualRevenue?: Prisma.SortOrderInput | Prisma.SortOrder
  companyAnnualRevenueClean?: Prisma.SortOrderInput | Prisma.SortOrder
  companyTotalFunding?: Prisma.SortOrderInput | Prisma.SortOrder
  companyTotalFundingClean?: Prisma.SortOrderInput | Prisma.SortOrder
  companyTechnologies?: Prisma.SortOrderInput | Prisma.SortOrder
  searchHistory?: Prisma.SearchHistoryOrderByWithRelationInput
}

export type LeadWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.LeadWhereInput | Prisma.LeadWhereInput[]
  OR?: Prisma.LeadWhereInput[]
  NOT?: Prisma.LeadWhereInput | Prisma.LeadWhereInput[]
  searchHistoryId?: Prisma.StringFilter<"Lead"> | string
  firstName?: Prisma.StringNullableFilter<"Lead"> | string | null
  lastName?: Prisma.StringNullableFilter<"Lead"> | string | null
  email?: Prisma.StringNullableFilter<"Lead"> | string | null
  personalEmail?: Prisma.StringNullableFilter<"Lead"> | string | null
  fullName?: Prisma.StringNullableFilter<"Lead"> | string | null
  jobTitle?: Prisma.StringNullableFilter<"Lead"> | string | null
  linkedin?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyName?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyWebsite?: Prisma.StringNullableFilter<"Lead"> | string | null
  industry?: Prisma.StringNullableFilter<"Lead"> | string | null
  companySize?: Prisma.StringNullableFilter<"Lead"> | string | null
  headline?: Prisma.StringNullableFilter<"Lead"> | string | null
  seniorityLevel?: Prisma.StringNullableFilter<"Lead"> | string | null
  functionalLevel?: Prisma.StringNullableFilter<"Lead"> | string | null
  city?: Prisma.StringNullableFilter<"Lead"> | string | null
  state?: Prisma.StringNullableFilter<"Lead"> | string | null
  country?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyLinkedin?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyLinkedinUid?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyFoundedYear?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyDomain?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyPhone?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyStreetAddress?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyFullAddress?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyState?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyCity?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyCountry?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyPostalCode?: Prisma.StringNullableFilter<"Lead"> | string | null
  keywords?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyDescription?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyAnnualRevenue?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyAnnualRevenueClean?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyTotalFunding?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyTotalFundingClean?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyTechnologies?: Prisma.StringNullableFilter<"Lead"> | string | null
  searchHistory?: Prisma.XOR<Prisma.SearchHistoryScalarRelationFilter, Prisma.SearchHistoryWhereInput>
}, "id">

export type LeadOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  searchHistoryId?: Prisma.SortOrder
  firstName?: Prisma.SortOrderInput | Prisma.SortOrder
  lastName?: Prisma.SortOrderInput | Prisma.SortOrder
  email?: Prisma.SortOrderInput | Prisma.SortOrder
  personalEmail?: Prisma.SortOrderInput | Prisma.SortOrder
  fullName?: Prisma.SortOrderInput | Prisma.SortOrder
  jobTitle?: Prisma.SortOrderInput | Prisma.SortOrder
  linkedin?: Prisma.SortOrderInput | Prisma.SortOrder
  companyName?: Prisma.SortOrderInput | Prisma.SortOrder
  companyWebsite?: Prisma.SortOrderInput | Prisma.SortOrder
  industry?: Prisma.SortOrderInput | Prisma.SortOrder
  companySize?: Prisma.SortOrderInput | Prisma.SortOrder
  headline?: Prisma.SortOrderInput | Prisma.SortOrder
  seniorityLevel?: Prisma.SortOrderInput | Prisma.SortOrder
  functionalLevel?: Prisma.SortOrderInput | Prisma.SortOrder
  city?: Prisma.SortOrderInput | Prisma.SortOrder
  state?: Prisma.SortOrderInput | Prisma.SortOrder
  country?: Prisma.SortOrderInput | Prisma.SortOrder
  companyLinkedin?: Prisma.SortOrderInput | Prisma.SortOrder
  companyLinkedinUid?: Prisma.SortOrderInput | Prisma.SortOrder
  companyFoundedYear?: Prisma.SortOrderInput | Prisma.SortOrder
  companyDomain?: Prisma.SortOrderInput | Prisma.SortOrder
  companyPhone?: Prisma.SortOrderInput | Prisma.SortOrder
  companyStreetAddress?: Prisma.SortOrderInput | Prisma.SortOrder
  companyFullAddress?: Prisma.SortOrderInput | Prisma.SortOrder
  companyState?: Prisma.SortOrderInput | Prisma.SortOrder
  companyCity?: Prisma.SortOrderInput | Prisma.SortOrder
  companyCountry?: Prisma.SortOrderInput | Prisma.SortOrder
  companyPostalCode?: Prisma.SortOrderInput | Prisma.SortOrder
  keywords?: Prisma.SortOrderInput | Prisma.SortOrder
  companyDescription?: Prisma.SortOrderInput | Prisma.SortOrder
  companyAnnualRevenue?: Prisma.SortOrderInput | Prisma.SortOrder
  companyAnnualRevenueClean?: Prisma.SortOrderInput | Prisma.SortOrder
  companyTotalFunding?: Prisma.SortOrderInput | Prisma.SortOrder
  companyTotalFundingClean?: Prisma.SortOrderInput | Prisma.SortOrder
  companyTechnologies?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.LeadCountOrderByAggregateInput
  _max?: Prisma.LeadMaxOrderByAggregateInput
  _min?: Prisma.LeadMinOrderByAggregateInput
}

export type LeadScalarWhereWithAggregatesInput = {
  AND?: Prisma.LeadScalarWhereWithAggregatesInput | Prisma.LeadScalarWhereWithAggregatesInput[]
  OR?: Prisma.LeadScalarWhereWithAggregatesInput[]
  NOT?: Prisma.LeadScalarWhereWithAggregatesInput | Prisma.LeadScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Lead"> | string
  searchHistoryId?: Prisma.StringWithAggregatesFilter<"Lead"> | string
  firstName?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
  lastName?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
  email?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
  personalEmail?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
  fullName?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
  jobTitle?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
  linkedin?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
  companyName?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
  companyWebsite?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
  industry?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
  companySize?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
  headline?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
  seniorityLevel?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
  functionalLevel?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
  city?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
  state?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
  country?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
  companyLinkedin?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
  companyLinkedinUid?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
  companyFoundedYear?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
  companyDomain?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
  companyPhone?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
  companyStreetAddress?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
  companyFullAddress?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
  companyState?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
  companyCity?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
  companyCountry?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
  companyPostalCode?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
  keywords?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
  companyDescription?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
  companyAnnualRevenue?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
  companyAnnualRevenueClean?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
  companyTotalFunding?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
  companyTotalFundingClean?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
  companyTechnologies?: Prisma.StringNullableWithAggregatesFilter<"Lead"> | string | null
}

export type LeadCreateInput = {
  id?: string
  firstName?: string | null
  lastName?: string | null
  email?: string | null
  personalEmail?: string | null
  fullName?: string | null
  jobTitle?: string | null
  linkedin?: string | null
  companyName?: string | null
  companyWebsite?: string | null
  industry?: string | null
  companySize?: string | null
  headline?: string | null
  seniorityLevel?: string | null
  functionalLevel?: string | null
  city?: string | null
  state?: string | null
  country?: string | null
  companyLinkedin?: string | null
  companyLinkedinUid?: string | null
  companyFoundedYear?: string | null
  companyDomain?: string | null
  companyPhone?: string | null
  companyStreetAddress?: string | null
  companyFullAddress?: string | null
  companyState?: string | null
  companyCity?: string | null
  companyCountry?: string | null
  companyPostalCode?: string | null
  keywords?: string | null
  companyDescription?: string | null
  companyAnnualRevenue?: string | null
  companyAnnualRevenueClean?: string | null
  companyTotalFunding?: string | null
  companyTotalFundingClean?: string | null
  companyTechnologies?: string | null
  searchHistory: Prisma.SearchHistoryCreateNestedOneWithoutLeadsInput
}

export type LeadUncheckedCreateInput = {
  id?: string
  searchHistoryId: string
  firstName?: string | null
  lastName?: string | null
  email?: string | null
  personalEmail?: string | null
  fullName?: string | null
  jobTitle?: string | null
  linkedin?: string | null
  companyName?: string | null
  companyWebsite?: string | null
  industry?: string | null
  companySize?: string | null
  headline?: string | null
  seniorityLevel?: string | null
  functionalLevel?: string | null
  city?: string | null
  state?: string | null
  country?: string | null
  companyLinkedin?: string | null
  companyLinkedinUid?: string | null
  companyFoundedYear?: string | null
  companyDomain?: string | null
  companyPhone?: string | null
  companyStreetAddress?: string | null
  companyFullAddress?: string | null
  companyState?: string | null
  companyCity?: string | null
  companyCountry?: string | null
  companyPostalCode?: string | null
  keywords?: string | null
  companyDescription?: string | null
  companyAnnualRevenue?: string | null
  companyAnnualRevenueClean?: string | null
  companyTotalFunding?: string | null
  companyTotalFundingClean?: string | null
  companyTechnologies?: string | null
}

export type LeadUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  personalEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  jobTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  linkedin?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyWebsite?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  industry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companySize?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  headline?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  seniorityLevel?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  functionalLevel?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  state?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyLinkedin?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyLinkedinUid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyFoundedYear?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyDomain?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyStreetAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyFullAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyState?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyCity?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyCountry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyPostalCode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  keywords?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyDescription?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyAnnualRevenue?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyAnnualRevenueClean?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyTotalFunding?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyTotalFundingClean?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyTechnologies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  searchHistory?: Prisma.SearchHistoryUpdateOneRequiredWithoutLeadsNestedInput
}

export type LeadUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  searchHistoryId?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  personalEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  jobTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  linkedin?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyWebsite?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  industry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companySize?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  headline?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  seniorityLevel?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  functionalLevel?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  state?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyLinkedin?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyLinkedinUid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyFoundedYear?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyDomain?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyStreetAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyFullAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyState?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyCity?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyCountry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyPostalCode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  keywords?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyDescription?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyAnnualRevenue?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyAnnualRevenueClean?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyTotalFunding?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyTotalFundingClean?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyTechnologies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type LeadCreateManyInput = {
  id?: string
  searchHistoryId: string
  firstName?: string | null
  lastName?: string | null
  email?: string | null
  personalEmail?: string | null
  fullName?: string | null
  jobTitle?: string | null
  linkedin?: string | null
  companyName?: string | null
  companyWebsite?: string | null
  industry?: string | null
  companySize?: string | null
  headline?: string | null
  seniorityLevel?: string | null
  functionalLevel?: string | null
  city?: string | null
  state?: string | null
  country?: string | null
  companyLinkedin?: string | null
  companyLinkedinUid?: string | null
  companyFoundedYear?: string | null
  companyDomain?: string | null
  companyPhone?: string | null
  companyStreetAddress?: string | null
  companyFullAddress?: string | null
  companyState?: string | null
  companyCity?: string | null
  companyCountry?: string | null
  companyPostalCode?: string | null
  keywords?: string | null
  companyDescription?: string | null
  companyAnnualRevenue?: string | null
  companyAnnualRevenueClean?: string | null
  companyTotalFunding?: string | null
  companyTotalFundingClean?: string | null
  companyTechnologies?: string | null
}

export type LeadUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  personalEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  jobTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  linkedin?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyWebsite?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  industry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companySize?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  headline?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  seniorityLevel?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  functionalLevel?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  state?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyLinkedin?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyLinkedinUid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyFoundedYear?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyDomain?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyStreetAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyFullAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyState?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyCity?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyCountry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyPostalCode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  keywords?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyDescription?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyAnnualRevenue?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyAnnualRevenueClean?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyTotalFunding?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyTotalFundingClean?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyTechnologies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type LeadUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  searchHistoryId?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  personalEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  jobTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  linkedin?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyWebsite?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  industry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companySize?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  headline?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  seniorityLevel?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  functionalLevel?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  state?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyLinkedin?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyLinkedinUid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyFoundedYear?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyDomain?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyStreetAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyFullAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyState?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyCity?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyCountry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyPostalCode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  keywords?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyDescription?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyAnnualRevenue?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyAnnualRevenueClean?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyTotalFunding?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyTotalFundingClean?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyTechnologies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type LeadListRelationFilter = {
  every?: Prisma.LeadWhereInput
  some?: Prisma.LeadWhereInput
  none?: Prisma.LeadWhereInput
}

export type LeadOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type LeadCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  searchHistoryId?: Prisma.SortOrder
  firstName?: Prisma.SortOrder
  lastName?: Prisma.SortOrder
  email?: Prisma.SortOrder
  personalEmail?: Prisma.SortOrder
  fullName?: Prisma.SortOrder
  jobTitle?: Prisma.SortOrder
  linkedin?: Prisma.SortOrder
  companyName?: Prisma.SortOrder
  companyWebsite?: Prisma.SortOrder
  industry?: Prisma.SortOrder
  companySize?: Prisma.SortOrder
  headline?: Prisma.SortOrder
  seniorityLevel?: Prisma.SortOrder
  functionalLevel?: Prisma.SortOrder
  city?: Prisma.SortOrder
  state?: Prisma.SortOrder
  country?: Prisma.SortOrder
  companyLinkedin?: Prisma.SortOrder
  companyLinkedinUid?: Prisma.SortOrder
  companyFoundedYear?: Prisma.SortOrder
  companyDomain?: Prisma.SortOrder
  companyPhone?: Prisma.SortOrder
  companyStreetAddress?: Prisma.SortOrder
  companyFullAddress?: Prisma.SortOrder
  companyState?: Prisma.SortOrder
  companyCity?: Prisma.SortOrder
  companyCountry?: Prisma.SortOrder
  companyPostalCode?: Prisma.SortOrder
  keywords?: Prisma.SortOrder
  companyDescription?: Prisma.SortOrder
  companyAnnualRevenue?: Prisma.SortOrder
  companyAnnualRevenueClean?: Prisma.SortOrder
  companyTotalFunding?: Prisma.SortOrder
  companyTotalFundingClean?: Prisma.SortOrder
  companyTechnologies?: Prisma.SortOrder
}

export type LeadMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  searchHistoryId?: Prisma.SortOrder
  firstName?: Prisma.SortOrder
  lastName?: Prisma.SortOrder
  email?: Prisma.SortOrder
  personalEmail?: Prisma.SortOrder
  fullName?: Prisma.SortOrder
  jobTitle?: Prisma.SortOrder
  linkedin?: Prisma.SortOrder
  companyName?: Prisma.SortOrder
  companyWebsite?: Prisma.SortOrder
  industry?: Prisma.SortOrder
  companySize?: Prisma.SortOrder
  headline?: Prisma.SortOrder
  seniorityLevel?: Prisma.SortOrder
  functionalLevel?: Prisma.SortOrder
  city?: Prisma.SortOrder
  state?: Prisma.SortOrder
  country?: Prisma.SortOrder
  companyLinkedin?: Prisma.SortOrder
  companyLinkedinUid?: Prisma.SortOrder
  companyFoundedYear?: Prisma.SortOrder
  companyDomain?: Prisma.SortOrder
  companyPhone?: Prisma.SortOrder
  companyStreetAddress?: Prisma.SortOrder
  companyFullAddress?: Prisma.SortOrder
  companyState?: Prisma.SortOrder
  companyCity?: Prisma.SortOrder
  companyCountry?: Prisma.SortOrder
  companyPostalCode?: Prisma.SortOrder
  keywords?: Prisma.SortOrder
  companyDescription?: Prisma.SortOrder
  companyAnnualRevenue?: Prisma.SortOrder
  companyAnnualRevenueClean?: Prisma.SortOrder
  companyTotalFunding?: Prisma.SortOrder
  companyTotalFundingClean?: Prisma.SortOrder
  companyTechnologies?: Prisma.SortOrder
}

export type LeadMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  searchHistoryId?: Prisma.SortOrder
  firstName?: Prisma.SortOrder
  lastName?: Prisma.SortOrder
  email?: Prisma.SortOrder
  personalEmail?: Prisma.SortOrder
  fullName?: Prisma.SortOrder
  jobTitle?: Prisma.SortOrder
  linkedin?: Prisma.SortOrder
  companyName?: Prisma.SortOrder
  companyWebsite?: Prisma.SortOrder
  industry?: Prisma.SortOrder
  companySize?: Prisma.SortOrder
  headline?: Prisma.SortOrder
  seniorityLevel?: Prisma.SortOrder
  functionalLevel?: Prisma.SortOrder
  city?: Prisma.SortOrder
  state?: Prisma.SortOrder
  country?: Prisma.SortOrder
  companyLinkedin?: Prisma.SortOrder
  companyLinkedinUid?: Prisma.SortOrder
  companyFoundedYear?: Prisma.SortOrder
  companyDomain?: Prisma.SortOrder
  companyPhone?: Prisma.SortOrder
  companyStreetAddress?: Prisma.SortOrder
  companyFullAddress?: Prisma.SortOrder
  companyState?: Prisma.SortOrder
  companyCity?: Prisma.SortOrder
  companyCountry?: Prisma.SortOrder
  companyPostalCode?: Prisma.SortOrder
  keywords?: Prisma.SortOrder
  companyDescription?: Prisma.SortOrder
  companyAnnualRevenue?: Prisma.SortOrder
  companyAnnualRevenueClean?: Prisma.SortOrder
  companyTotalFunding?: Prisma.SortOrder
  companyTotalFundingClean?: Prisma.SortOrder
  companyTechnologies?: Prisma.SortOrder
}

export type LeadCreateNestedManyWithoutSearchHistoryInput = {
  create?: Prisma.XOR<Prisma.LeadCreateWithoutSearchHistoryInput, Prisma.LeadUncheckedCreateWithoutSearchHistoryInput> | Prisma.LeadCreateWithoutSearchHistoryInput[] | Prisma.LeadUncheckedCreateWithoutSearchHistoryInput[]
  connectOrCreate?: Prisma.LeadCreateOrConnectWithoutSearchHistoryInput | Prisma.LeadCreateOrConnectWithoutSearchHistoryInput[]
  createMany?: Prisma.LeadCreateManySearchHistoryInputEnvelope
  connect?: Prisma.LeadWhereUniqueInput | Prisma.LeadWhereUniqueInput[]
}

export type LeadUncheckedCreateNestedManyWithoutSearchHistoryInput = {
  create?: Prisma.XOR<Prisma.LeadCreateWithoutSearchHistoryInput, Prisma.LeadUncheckedCreateWithoutSearchHistoryInput> | Prisma.LeadCreateWithoutSearchHistoryInput[] | Prisma.LeadUncheckedCreateWithoutSearchHistoryInput[]
  connectOrCreate?: Prisma.LeadCreateOrConnectWithoutSearchHistoryInput | Prisma.LeadCreateOrConnectWithoutSearchHistoryInput[]
  createMany?: Prisma.LeadCreateManySearchHistoryInputEnvelope
  connect?: Prisma.LeadWhereUniqueInput | Prisma.LeadWhereUniqueInput[]
}

export type LeadUpdateManyWithoutSearchHistoryNestedInput = {
  create?: Prisma.XOR<Prisma.LeadCreateWithoutSearchHistoryInput, Prisma.LeadUncheckedCreateWithoutSearchHistoryInput> | Prisma.LeadCreateWithoutSearchHistoryInput[] | Prisma.LeadUncheckedCreateWithoutSearchHistoryInput[]
  connectOrCreate?: Prisma.LeadCreateOrConnectWithoutSearchHistoryInput | Prisma.LeadCreateOrConnectWithoutSearchHistoryInput[]
  upsert?: Prisma.LeadUpsertWithWhereUniqueWithoutSearchHistoryInput | Prisma.LeadUpsertWithWhereUniqueWithoutSearchHistoryInput[]
  createMany?: Prisma.LeadCreateManySearchHistoryInputEnvelope
  set?: Prisma.LeadWhereUniqueInput | Prisma.LeadWhereUniqueInput[]
  disconnect?: Prisma.LeadWhereUniqueInput | Prisma.LeadWhereUniqueInput[]
  delete?: Prisma.LeadWhereUniqueInput | Prisma.LeadWhereUniqueInput[]
  connect?: Prisma.LeadWhereUniqueInput | Prisma.LeadWhereUniqueInput[]
  update?: Prisma.LeadUpdateWithWhereUniqueWithoutSearchHistoryInput | Prisma.LeadUpdateWithWhereUniqueWithoutSearchHistoryInput[]
  updateMany?: Prisma.LeadUpdateManyWithWhereWithoutSearchHistoryInput | Prisma.LeadUpdateManyWithWhereWithoutSearchHistoryInput[]
  deleteMany?: Prisma.LeadScalarWhereInput | Prisma.LeadScalarWhereInput[]
}

export type LeadUncheckedUpdateManyWithoutSearchHistoryNestedInput = {
  create?: Prisma.XOR<Prisma.LeadCreateWithoutSearchHistoryInput, Prisma.LeadUncheckedCreateWithoutSearchHistoryInput> | Prisma.LeadCreateWithoutSearchHistoryInput[] | Prisma.LeadUncheckedCreateWithoutSearchHistoryInput[]
  connectOrCreate?: Prisma.LeadCreateOrConnectWithoutSearchHistoryInput | Prisma.LeadCreateOrConnectWithoutSearchHistoryInput[]
  upsert?: Prisma.LeadUpsertWithWhereUniqueWithoutSearchHistoryInput | Prisma.LeadUpsertWithWhereUniqueWithoutSearchHistoryInput[]
  createMany?: Prisma.LeadCreateManySearchHistoryInputEnvelope
  set?: Prisma.LeadWhereUniqueInput | Prisma.LeadWhereUniqueInput[]
  disconnect?: Prisma.LeadWhereUniqueInput | Prisma.LeadWhereUniqueInput[]
  delete?: Prisma.LeadWhereUniqueInput | Prisma.LeadWhereUniqueInput[]
  connect?: Prisma.LeadWhereUniqueInput | Prisma.LeadWhereUniqueInput[]
  update?: Prisma.LeadUpdateWithWhereUniqueWithoutSearchHistoryInput | Prisma.LeadUpdateWithWhereUniqueWithoutSearchHistoryInput[]
  updateMany?: Prisma.LeadUpdateManyWithWhereWithoutSearchHistoryInput | Prisma.LeadUpdateManyWithWhereWithoutSearchHistoryInput[]
  deleteMany?: Prisma.LeadScalarWhereInput | Prisma.LeadScalarWhereInput[]
}

export type LeadCreateWithoutSearchHistoryInput = {
  id?: string
  firstName?: string | null
  lastName?: string | null
  email?: string | null
  personalEmail?: string | null
  fullName?: string | null
  jobTitle?: string | null
  linkedin?: string | null
  companyName?: string | null
  companyWebsite?: string | null
  industry?: string | null
  companySize?: string | null
  headline?: string | null
  seniorityLevel?: string | null
  functionalLevel?: string | null
  city?: string | null
  state?: string | null
  country?: string | null
  companyLinkedin?: string | null
  companyLinkedinUid?: string | null
  companyFoundedYear?: string | null
  companyDomain?: string | null
  companyPhone?: string | null
  companyStreetAddress?: string | null
  companyFullAddress?: string | null
  companyState?: string | null
  companyCity?: string | null
  companyCountry?: string | null
  companyPostalCode?: string | null
  keywords?: string | null
  companyDescription?: string | null
  companyAnnualRevenue?: string | null
  companyAnnualRevenueClean?: string | null
  companyTotalFunding?: string | null
  companyTotalFundingClean?: string | null
  companyTechnologies?: string | null
}

export type LeadUncheckedCreateWithoutSearchHistoryInput = {
  id?: string
  firstName?: string | null
  lastName?: string | null
  email?: string | null
  personalEmail?: string | null
  fullName?: string | null
  jobTitle?: string | null
  linkedin?: string | null
  companyName?: string | null
  companyWebsite?: string | null
  industry?: string | null
  companySize?: string | null
  headline?: string | null
  seniorityLevel?: string | null
  functionalLevel?: string | null
  city?: string | null
  state?: string | null
  country?: string | null
  companyLinkedin?: string | null
  companyLinkedinUid?: string | null
  companyFoundedYear?: string | null
  companyDomain?: string | null
  companyPhone?: string | null
  companyStreetAddress?: string | null
  companyFullAddress?: string | null
  companyState?: string | null
  companyCity?: string | null
  companyCountry?: string | null
  companyPostalCode?: string | null
  keywords?: string | null
  companyDescription?: string | null
  companyAnnualRevenue?: string | null
  companyAnnualRevenueClean?: string | null
  companyTotalFunding?: string | null
  companyTotalFundingClean?: string | null
  companyTechnologies?: string | null
}

export type LeadCreateOrConnectWithoutSearchHistoryInput = {
  where: Prisma.LeadWhereUniqueInput
  create: Prisma.XOR<Prisma.LeadCreateWithoutSearchHistoryInput, Prisma.LeadUncheckedCreateWithoutSearchHistoryInput>
}

export type LeadCreateManySearchHistoryInputEnvelope = {
  data: Prisma.LeadCreateManySearchHistoryInput | Prisma.LeadCreateManySearchHistoryInput[]
  skipDuplicates?: boolean
}

export type LeadUpsertWithWhereUniqueWithoutSearchHistoryInput = {
  where: Prisma.LeadWhereUniqueInput
  update: Prisma.XOR<Prisma.LeadUpdateWithoutSearchHistoryInput, Prisma.LeadUncheckedUpdateWithoutSearchHistoryInput>
  create: Prisma.XOR<Prisma.LeadCreateWithoutSearchHistoryInput, Prisma.LeadUncheckedCreateWithoutSearchHistoryInput>
}

export type LeadUpdateWithWhereUniqueWithoutSearchHistoryInput = {
  where: Prisma.LeadWhereUniqueInput
  data: Prisma.XOR<Prisma.LeadUpdateWithoutSearchHistoryInput, Prisma.LeadUncheckedUpdateWithoutSearchHistoryInput>
}

export type LeadUpdateManyWithWhereWithoutSearchHistoryInput = {
  where: Prisma.LeadScalarWhereInput
  data: Prisma.XOR<Prisma.LeadUpdateManyMutationInput, Prisma.LeadUncheckedUpdateManyWithoutSearchHistoryInput>
}

export type LeadScalarWhereInput = {
  AND?: Prisma.LeadScalarWhereInput | Prisma.LeadScalarWhereInput[]
  OR?: Prisma.LeadScalarWhereInput[]
  NOT?: Prisma.LeadScalarWhereInput | Prisma.LeadScalarWhereInput[]
  id?: Prisma.StringFilter<"Lead"> | string
  searchHistoryId?: Prisma.StringFilter<"Lead"> | string
  firstName?: Prisma.StringNullableFilter<"Lead"> | string | null
  lastName?: Prisma.StringNullableFilter<"Lead"> | string | null
  email?: Prisma.StringNullableFilter<"Lead"> | string | null
  personalEmail?: Prisma.StringNullableFilter<"Lead"> | string | null
  fullName?: Prisma.StringNullableFilter<"Lead"> | string | null
  jobTitle?: Prisma.StringNullableFilter<"Lead"> | string | null
  linkedin?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyName?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyWebsite?: Prisma.StringNullableFilter<"Lead"> | string | null
  industry?: Prisma.StringNullableFilter<"Lead"> | string | null
  companySize?: Prisma.StringNullableFilter<"Lead"> | string | null
  headline?: Prisma.StringNullableFilter<"Lead"> | string | null
  seniorityLevel?: Prisma.StringNullableFilter<"Lead"> | string | null
  functionalLevel?: Prisma.StringNullableFilter<"Lead"> | string | null
  city?: Prisma.StringNullableFilter<"Lead"> | string | null
  state?: Prisma.StringNullableFilter<"Lead"> | string | null
  country?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyLinkedin?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyLinkedinUid?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyFoundedYear?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyDomain?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyPhone?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyStreetAddress?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyFullAddress?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyState?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyCity?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyCountry?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyPostalCode?: Prisma.StringNullableFilter<"Lead"> | string | null
  keywords?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyDescription?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyAnnualRevenue?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyAnnualRevenueClean?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyTotalFunding?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyTotalFundingClean?: Prisma.StringNullableFilter<"Lead"> | string | null
  companyTechnologies?: Prisma.StringNullableFilter<"Lead"> | string | null
}

export type LeadCreateManySearchHistoryInput = {
  id?: string
  firstName?: string | null
  lastName?: string | null
  email?: string | null
  personalEmail?: string | null
  fullName?: string | null
  jobTitle?: string | null
  linkedin?: string | null
  companyName?: string | null
  companyWebsite?: string | null
  industry?: string | null
  companySize?: string | null
  headline?: string | null
  seniorityLevel?: string | null
  functionalLevel?: string | null
  city?: string | null
  state?: string | null
  country?: string | null
  companyLinkedin?: string | null
  companyLinkedinUid?: string | null
  companyFoundedYear?: string | null
  companyDomain?: string | null
  companyPhone?: string | null
  companyStreetAddress?: string | null
  companyFullAddress?: string | null
  companyState?: string | null
  companyCity?: string | null
  companyCountry?: string | null
  companyPostalCode?: string | null
  keywords?: string | null
  companyDescription?: string | null
  companyAnnualRevenue?: string | null
  companyAnnualRevenueClean?: string | null
  companyTotalFunding?: string | null
  companyTotalFundingClean?: string | null
  companyTechnologies?: string | null
}

export type LeadUpdateWithoutSearchHistoryInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  personalEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  jobTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  linkedin?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyWebsite?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  industry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companySize?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  headline?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  seniorityLevel?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  functionalLevel?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  state?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyLinkedin?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyLinkedinUid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyFoundedYear?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyDomain?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyStreetAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyFullAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyState?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyCity?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyCountry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyPostalCode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  keywords?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyDescription?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyAnnualRevenue?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyAnnualRevenueClean?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyTotalFunding?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyTotalFundingClean?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyTechnologies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type LeadUncheckedUpdateWithoutSearchHistoryInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  personalEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  jobTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  linkedin?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyWebsite?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  industry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companySize?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  headline?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  seniorityLevel?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  functionalLevel?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  state?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyLinkedin?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyLinkedinUid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyFoundedYear?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyDomain?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyStreetAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyFullAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyState?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyCity?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyCountry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyPostalCode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  keywords?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyDescription?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyAnnualRevenue?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyAnnualRevenueClean?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyTotalFunding?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyTotalFundingClean?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyTechnologies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type LeadUncheckedUpdateManyWithoutSearchHistoryInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  personalEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  jobTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  linkedin?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyWebsite?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  industry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companySize?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  headline?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  seniorityLevel?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  functionalLevel?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  state?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyLinkedin?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyLinkedinUid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyFoundedYear?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyDomain?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyPhone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyStreetAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyFullAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyState?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyCity?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyCountry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyPostalCode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  keywords?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyDescription?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyAnnualRevenue?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyAnnualRevenueClean?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyTotalFunding?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyTotalFundingClean?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  companyTechnologies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}



export type LeadSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  searchHistoryId?: boolean
  firstName?: boolean
  lastName?: boolean
  email?: boolean
  personalEmail?: boolean
  fullName?: boolean
  jobTitle?: boolean
  linkedin?: boolean
  companyName?: boolean
  companyWebsite?: boolean
  industry?: boolean
  companySize?: boolean
  headline?: boolean
  seniorityLevel?: boolean
  functionalLevel?: boolean
  city?: boolean
  state?: boolean
  country?: boolean
  companyLinkedin?: boolean
  companyLinkedinUid?: boolean
  companyFoundedYear?: boolean
  companyDomain?: boolean
  companyPhone?: boolean
  companyStreetAddress?: boolean
  companyFullAddress?: boolean
  companyState?: boolean
  companyCity?: boolean
  companyCountry?: boolean
  companyPostalCode?: boolean
  keywords?: boolean
  companyDescription?: boolean
  companyAnnualRevenue?: boolean
  companyAnnualRevenueClean?: boolean
  companyTotalFunding?: boolean
  companyTotalFundingClean?: boolean
  companyTechnologies?: boolean
  searchHistory?: boolean | Prisma.SearchHistoryDefaultArgs<ExtArgs>
}, ExtArgs["result"]["lead"]>

export type LeadSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  searchHistoryId?: boolean
  firstName?: boolean
  lastName?: boolean
  email?: boolean
  personalEmail?: boolean
  fullName?: boolean
  jobTitle?: boolean
  linkedin?: boolean
  companyName?: boolean
  companyWebsite?: boolean
  industry?: boolean
  companySize?: boolean
  headline?: boolean
  seniorityLevel?: boolean
  functionalLevel?: boolean
  city?: boolean
  state?: boolean
  country?: boolean
  companyLinkedin?: boolean
  companyLinkedinUid?: boolean
  companyFoundedYear?: boolean
  companyDomain?: boolean
  companyPhone?: boolean
  companyStreetAddress?: boolean
  companyFullAddress?: boolean
  companyState?: boolean
  companyCity?: boolean
  companyCountry?: boolean
  companyPostalCode?: boolean
  keywords?: boolean
  companyDescription?: boolean
  companyAnnualRevenue?: boolean
  companyAnnualRevenueClean?: boolean
  companyTotalFunding?: boolean
  companyTotalFundingClean?: boolean
  companyTechnologies?: boolean
  searchHistory?: boolean | Prisma.SearchHistoryDefaultArgs<ExtArgs>
}, ExtArgs["result"]["lead"]>

export type LeadSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  searchHistoryId?: boolean
  firstName?: boolean
  lastName?: boolean
  email?: boolean
  personalEmail?: boolean
  fullName?: boolean
  jobTitle?: boolean
  linkedin?: boolean
  companyName?: boolean
  companyWebsite?: boolean
  industry?: boolean
  companySize?: boolean
  headline?: boolean
  seniorityLevel?: boolean
  functionalLevel?: boolean
  city?: boolean
  state?: boolean
  country?: boolean
  companyLinkedin?: boolean
  companyLinkedinUid?: boolean
  companyFoundedYear?: boolean
  companyDomain?: boolean
  companyPhone?: boolean
  companyStreetAddress?: boolean
  companyFullAddress?: boolean
  companyState?: boolean
  companyCity?: boolean
  companyCountry?: boolean
  companyPostalCode?: boolean
  keywords?: boolean
  companyDescription?: boolean
  companyAnnualRevenue?: boolean
  companyAnnualRevenueClean?: boolean
  companyTotalFunding?: boolean
  companyTotalFundingClean?: boolean
  companyTechnologies?: boolean
  searchHistory?: boolean | Prisma.SearchHistoryDefaultArgs<ExtArgs>
}, ExtArgs["result"]["lead"]>

export type LeadSelectScalar = {
  id?: boolean
  searchHistoryId?: boolean
  firstName?: boolean
  lastName?: boolean
  email?: boolean
  personalEmail?: boolean
  fullName?: boolean
  jobTitle?: boolean
  linkedin?: boolean
  companyName?: boolean
  companyWebsite?: boolean
  industry?: boolean
  companySize?: boolean
  headline?: boolean
  seniorityLevel?: boolean
  functionalLevel?: boolean
  city?: boolean
  state?: boolean
  country?: boolean
  companyLinkedin?: boolean
  companyLinkedinUid?: boolean
  companyFoundedYear?: boolean
  companyDomain?: boolean
  companyPhone?: boolean
  companyStreetAddress?: boolean
  companyFullAddress?: boolean
  companyState?: boolean
  companyCity?: boolean
  companyCountry?: boolean
  companyPostalCode?: boolean
  keywords?: boolean
  companyDescription?: boolean
  companyAnnualRevenue?: boolean
  companyAnnualRevenueClean?: boolean
  companyTotalFunding?: boolean
  companyTotalFundingClean?: boolean
  companyTechnologies?: boolean
}

export type LeadOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "searchHistoryId" | "firstName" | "lastName" | "email" | "personalEmail" | "fullName" | "jobTitle" | "linkedin" | "companyName" | "companyWebsite" | "industry" | "companySize" | "headline" | "seniorityLevel" | "functionalLevel" | "city" | "state" | "country" | "companyLinkedin" | "companyLinkedinUid" | "companyFoundedYear" | "companyDomain" | "companyPhone" | "companyStreetAddress" | "companyFullAddress" | "companyState" | "companyCity" | "companyCountry" | "companyPostalCode" | "keywords" | "companyDescription" | "companyAnnualRevenue" | "companyAnnualRevenueClean" | "companyTotalFunding" | "companyTotalFundingClean" | "companyTechnologies", ExtArgs["result"]["lead"]>
export type LeadInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  searchHistory?: boolean | Prisma.SearchHistoryDefaultArgs<ExtArgs>
}
export type LeadIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  searchHistory?: boolean | Prisma.SearchHistoryDefaultArgs<ExtArgs>
}
export type LeadIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  searchHistory?: boolean | Prisma.SearchHistoryDefaultArgs<ExtArgs>
}

export type $LeadPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Lead"
  objects: {
    searchHistory: Prisma.$SearchHistoryPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    searchHistoryId: string
    firstName: string | null
    lastName: string | null
    email: string | null
    personalEmail: string | null
    fullName: string | null
    jobTitle: string | null
    linkedin: string | null
    companyName: string | null
    companyWebsite: string | null
    industry: string | null
    companySize: string | null
    headline: string | null
    seniorityLevel: string | null
    functionalLevel: string | null
    city: string | null
    state: string | null
    country: string | null
    companyLinkedin: string | null
    companyLinkedinUid: string | null
    companyFoundedYear: string | null
    companyDomain: string | null
    companyPhone: string | null
    companyStreetAddress: string | null
    companyFullAddress: string | null
    companyState: string | null
    companyCity: string | null
    companyCountry: string | null
    companyPostalCode: string | null
    keywords: string | null
    companyDescription: string | null
    companyAnnualRevenue: string | null
    companyAnnualRevenueClean: string | null
    companyTotalFunding: string | null
    companyTotalFundingClean: string | null
    companyTechnologies: string | null
  }, ExtArgs["result"]["lead"]>
  composites: {}
}

export type LeadGetPayload<S extends boolean | null | undefined | LeadDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$LeadPayload, S>

export type LeadCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<LeadFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: LeadCountAggregateInputType | true
  }

export interface LeadDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Lead'], meta: { name: 'Lead' } }
  /**
   * Find zero or one Lead that matches the filter.
   * @param {LeadFindUniqueArgs} args - Arguments to find a Lead
   * @example
   * // Get one Lead
   * const lead = await prisma.lead.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends LeadFindUniqueArgs>(args: Prisma.SelectSubset<T, LeadFindUniqueArgs<ExtArgs>>): Prisma.Prisma__LeadClient<runtime.Types.Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Lead that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {LeadFindUniqueOrThrowArgs} args - Arguments to find a Lead
   * @example
   * // Get one Lead
   * const lead = await prisma.lead.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends LeadFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, LeadFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__LeadClient<runtime.Types.Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Lead that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {LeadFindFirstArgs} args - Arguments to find a Lead
   * @example
   * // Get one Lead
   * const lead = await prisma.lead.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends LeadFindFirstArgs>(args?: Prisma.SelectSubset<T, LeadFindFirstArgs<ExtArgs>>): Prisma.Prisma__LeadClient<runtime.Types.Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Lead that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {LeadFindFirstOrThrowArgs} args - Arguments to find a Lead
   * @example
   * // Get one Lead
   * const lead = await prisma.lead.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends LeadFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, LeadFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__LeadClient<runtime.Types.Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Leads that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {LeadFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Leads
   * const leads = await prisma.lead.findMany()
   * 
   * // Get first 10 Leads
   * const leads = await prisma.lead.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const leadWithIdOnly = await prisma.lead.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends LeadFindManyArgs>(args?: Prisma.SelectSubset<T, LeadFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Lead.
   * @param {LeadCreateArgs} args - Arguments to create a Lead.
   * @example
   * // Create one Lead
   * const Lead = await prisma.lead.create({
   *   data: {
   *     // ... data to create a Lead
   *   }
   * })
   * 
   */
  create<T extends LeadCreateArgs>(args: Prisma.SelectSubset<T, LeadCreateArgs<ExtArgs>>): Prisma.Prisma__LeadClient<runtime.Types.Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Leads.
   * @param {LeadCreateManyArgs} args - Arguments to create many Leads.
   * @example
   * // Create many Leads
   * const lead = await prisma.lead.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends LeadCreateManyArgs>(args?: Prisma.SelectSubset<T, LeadCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Leads and returns the data saved in the database.
   * @param {LeadCreateManyAndReturnArgs} args - Arguments to create many Leads.
   * @example
   * // Create many Leads
   * const lead = await prisma.lead.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Leads and only return the `id`
   * const leadWithIdOnly = await prisma.lead.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends LeadCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, LeadCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Lead.
   * @param {LeadDeleteArgs} args - Arguments to delete one Lead.
   * @example
   * // Delete one Lead
   * const Lead = await prisma.lead.delete({
   *   where: {
   *     // ... filter to delete one Lead
   *   }
   * })
   * 
   */
  delete<T extends LeadDeleteArgs>(args: Prisma.SelectSubset<T, LeadDeleteArgs<ExtArgs>>): Prisma.Prisma__LeadClient<runtime.Types.Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Lead.
   * @param {LeadUpdateArgs} args - Arguments to update one Lead.
   * @example
   * // Update one Lead
   * const lead = await prisma.lead.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends LeadUpdateArgs>(args: Prisma.SelectSubset<T, LeadUpdateArgs<ExtArgs>>): Prisma.Prisma__LeadClient<runtime.Types.Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Leads.
   * @param {LeadDeleteManyArgs} args - Arguments to filter Leads to delete.
   * @example
   * // Delete a few Leads
   * const { count } = await prisma.lead.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends LeadDeleteManyArgs>(args?: Prisma.SelectSubset<T, LeadDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Leads.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {LeadUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Leads
   * const lead = await prisma.lead.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends LeadUpdateManyArgs>(args: Prisma.SelectSubset<T, LeadUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Leads and returns the data updated in the database.
   * @param {LeadUpdateManyAndReturnArgs} args - Arguments to update many Leads.
   * @example
   * // Update many Leads
   * const lead = await prisma.lead.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Leads and only return the `id`
   * const leadWithIdOnly = await prisma.lead.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends LeadUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, LeadUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Lead.
   * @param {LeadUpsertArgs} args - Arguments to update or create a Lead.
   * @example
   * // Update or create a Lead
   * const lead = await prisma.lead.upsert({
   *   create: {
   *     // ... data to create a Lead
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Lead we want to update
   *   }
   * })
   */
  upsert<T extends LeadUpsertArgs>(args: Prisma.SelectSubset<T, LeadUpsertArgs<ExtArgs>>): Prisma.Prisma__LeadClient<runtime.Types.Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Leads.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {LeadCountArgs} args - Arguments to filter Leads to count.
   * @example
   * // Count the number of Leads
   * const count = await prisma.lead.count({
   *   where: {
   *     // ... the filter for the Leads we want to count
   *   }
   * })
  **/
  count<T extends LeadCountArgs>(
    args?: Prisma.Subset<T, LeadCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], LeadCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Lead.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {LeadAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends LeadAggregateArgs>(args: Prisma.Subset<T, LeadAggregateArgs>): Prisma.PrismaPromise<GetLeadAggregateType<T>>

  /**
   * Group by Lead.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {LeadGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends LeadGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: LeadGroupByArgs['orderBy'] }
      : { orderBy?: LeadGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, LeadGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLeadGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Lead model
 */
readonly fields: LeadFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Lead.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__LeadClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  searchHistory<T extends Prisma.SearchHistoryDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.SearchHistoryDefaultArgs<ExtArgs>>): Prisma.Prisma__SearchHistoryClient<runtime.Types.Result.GetResult<Prisma.$SearchHistoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Lead model
 */
export interface LeadFieldRefs {
  readonly id: Prisma.FieldRef<"Lead", 'String'>
  readonly searchHistoryId: Prisma.FieldRef<"Lead", 'String'>
  readonly firstName: Prisma.FieldRef<"Lead", 'String'>
  readonly lastName: Prisma.FieldRef<"Lead", 'String'>
  readonly email: Prisma.FieldRef<"Lead", 'String'>
  readonly personalEmail: Prisma.FieldRef<"Lead", 'String'>
  readonly fullName: Prisma.FieldRef<"Lead", 'String'>
  readonly jobTitle: Prisma.FieldRef<"Lead", 'String'>
  readonly linkedin: Prisma.FieldRef<"Lead", 'String'>
  readonly companyName: Prisma.FieldRef<"Lead", 'String'>
  readonly companyWebsite: Prisma.FieldRef<"Lead", 'String'>
  readonly industry: Prisma.FieldRef<"Lead", 'String'>
  readonly companySize: Prisma.FieldRef<"Lead", 'String'>
  readonly headline: Prisma.FieldRef<"Lead", 'String'>
  readonly seniorityLevel: Prisma.FieldRef<"Lead", 'String'>
  readonly functionalLevel: Prisma.FieldRef<"Lead", 'String'>
  readonly city: Prisma.FieldRef<"Lead", 'String'>
  readonly state: Prisma.FieldRef<"Lead", 'String'>
  readonly country: Prisma.FieldRef<"Lead", 'String'>
  readonly companyLinkedin: Prisma.FieldRef<"Lead", 'String'>
  readonly companyLinkedinUid: Prisma.FieldRef<"Lead", 'String'>
  readonly companyFoundedYear: Prisma.FieldRef<"Lead", 'String'>
  readonly companyDomain: Prisma.FieldRef<"Lead", 'String'>
  readonly companyPhone: Prisma.FieldRef<"Lead", 'String'>
  readonly companyStreetAddress: Prisma.FieldRef<"Lead", 'String'>
  readonly companyFullAddress: Prisma.FieldRef<"Lead", 'String'>
  readonly companyState: Prisma.FieldRef<"Lead", 'String'>
  readonly companyCity: Prisma.FieldRef<"Lead", 'String'>
  readonly companyCountry: Prisma.FieldRef<"Lead", 'String'>
  readonly companyPostalCode: Prisma.FieldRef<"Lead", 'String'>
  readonly keywords: Prisma.FieldRef<"Lead", 'String'>
  readonly companyDescription: Prisma.FieldRef<"Lead", 'String'>
  readonly companyAnnualRevenue: Prisma.FieldRef<"Lead", 'String'>
  readonly companyAnnualRevenueClean: Prisma.FieldRef<"Lead", 'String'>
  readonly companyTotalFunding: Prisma.FieldRef<"Lead", 'String'>
  readonly companyTotalFundingClean: Prisma.FieldRef<"Lead", 'String'>
  readonly companyTechnologies: Prisma.FieldRef<"Lead", 'String'>
}
    

// Custom InputTypes
/**
 * Lead findUnique
 */
export type LeadFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Lead
   */
  select?: Prisma.LeadSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Lead
   */
  omit?: Prisma.LeadOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LeadInclude<ExtArgs> | null
  /**
   * Filter, which Lead to fetch.
   */
  where: Prisma.LeadWhereUniqueInput
}

/**
 * Lead findUniqueOrThrow
 */
export type LeadFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Lead
   */
  select?: Prisma.LeadSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Lead
   */
  omit?: Prisma.LeadOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LeadInclude<ExtArgs> | null
  /**
   * Filter, which Lead to fetch.
   */
  where: Prisma.LeadWhereUniqueInput
}

/**
 * Lead findFirst
 */
export type LeadFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Lead
   */
  select?: Prisma.LeadSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Lead
   */
  omit?: Prisma.LeadOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LeadInclude<ExtArgs> | null
  /**
   * Filter, which Lead to fetch.
   */
  where?: Prisma.LeadWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Leads to fetch.
   */
  orderBy?: Prisma.LeadOrderByWithRelationInput | Prisma.LeadOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Leads.
   */
  cursor?: Prisma.LeadWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Leads from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Leads.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Leads.
   */
  distinct?: Prisma.LeadScalarFieldEnum | Prisma.LeadScalarFieldEnum[]
}

/**
 * Lead findFirstOrThrow
 */
export type LeadFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Lead
   */
  select?: Prisma.LeadSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Lead
   */
  omit?: Prisma.LeadOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LeadInclude<ExtArgs> | null
  /**
   * Filter, which Lead to fetch.
   */
  where?: Prisma.LeadWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Leads to fetch.
   */
  orderBy?: Prisma.LeadOrderByWithRelationInput | Prisma.LeadOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Leads.
   */
  cursor?: Prisma.LeadWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Leads from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Leads.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Leads.
   */
  distinct?: Prisma.LeadScalarFieldEnum | Prisma.LeadScalarFieldEnum[]
}

/**
 * Lead findMany
 */
export type LeadFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Lead
   */
  select?: Prisma.LeadSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Lead
   */
  omit?: Prisma.LeadOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LeadInclude<ExtArgs> | null
  /**
   * Filter, which Leads to fetch.
   */
  where?: Prisma.LeadWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Leads to fetch.
   */
  orderBy?: Prisma.LeadOrderByWithRelationInput | Prisma.LeadOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Leads.
   */
  cursor?: Prisma.LeadWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Leads from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Leads.
   */
  skip?: number
  distinct?: Prisma.LeadScalarFieldEnum | Prisma.LeadScalarFieldEnum[]
}

/**
 * Lead create
 */
export type LeadCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Lead
   */
  select?: Prisma.LeadSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Lead
   */
  omit?: Prisma.LeadOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LeadInclude<ExtArgs> | null
  /**
   * The data needed to create a Lead.
   */
  data: Prisma.XOR<Prisma.LeadCreateInput, Prisma.LeadUncheckedCreateInput>
}

/**
 * Lead createMany
 */
export type LeadCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Leads.
   */
  data: Prisma.LeadCreateManyInput | Prisma.LeadCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Lead createManyAndReturn
 */
export type LeadCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Lead
   */
  select?: Prisma.LeadSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Lead
   */
  omit?: Prisma.LeadOmit<ExtArgs> | null
  /**
   * The data used to create many Leads.
   */
  data: Prisma.LeadCreateManyInput | Prisma.LeadCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LeadIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Lead update
 */
export type LeadUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Lead
   */
  select?: Prisma.LeadSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Lead
   */
  omit?: Prisma.LeadOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LeadInclude<ExtArgs> | null
  /**
   * The data needed to update a Lead.
   */
  data: Prisma.XOR<Prisma.LeadUpdateInput, Prisma.LeadUncheckedUpdateInput>
  /**
   * Choose, which Lead to update.
   */
  where: Prisma.LeadWhereUniqueInput
}

/**
 * Lead updateMany
 */
export type LeadUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Leads.
   */
  data: Prisma.XOR<Prisma.LeadUpdateManyMutationInput, Prisma.LeadUncheckedUpdateManyInput>
  /**
   * Filter which Leads to update
   */
  where?: Prisma.LeadWhereInput
  /**
   * Limit how many Leads to update.
   */
  limit?: number
}

/**
 * Lead updateManyAndReturn
 */
export type LeadUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Lead
   */
  select?: Prisma.LeadSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Lead
   */
  omit?: Prisma.LeadOmit<ExtArgs> | null
  /**
   * The data used to update Leads.
   */
  data: Prisma.XOR<Prisma.LeadUpdateManyMutationInput, Prisma.LeadUncheckedUpdateManyInput>
  /**
   * Filter which Leads to update
   */
  where?: Prisma.LeadWhereInput
  /**
   * Limit how many Leads to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LeadIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Lead upsert
 */
export type LeadUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Lead
   */
  select?: Prisma.LeadSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Lead
   */
  omit?: Prisma.LeadOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LeadInclude<ExtArgs> | null
  /**
   * The filter to search for the Lead to update in case it exists.
   */
  where: Prisma.LeadWhereUniqueInput
  /**
   * In case the Lead found by the `where` argument doesn't exist, create a new Lead with this data.
   */
  create: Prisma.XOR<Prisma.LeadCreateInput, Prisma.LeadUncheckedCreateInput>
  /**
   * In case the Lead was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.LeadUpdateInput, Prisma.LeadUncheckedUpdateInput>
}

/**
 * Lead delete
 */
export type LeadDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Lead
   */
  select?: Prisma.LeadSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Lead
   */
  omit?: Prisma.LeadOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LeadInclude<ExtArgs> | null
  /**
   * Filter which Lead to delete.
   */
  where: Prisma.LeadWhereUniqueInput
}

/**
 * Lead deleteMany
 */
export type LeadDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Leads to delete
   */
  where?: Prisma.LeadWhereInput
  /**
   * Limit how many Leads to delete.
   */
  limit?: number
}

/**
 * Lead without action
 */
export type LeadDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Lead
   */
  select?: Prisma.LeadSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Lead
   */
  omit?: Prisma.LeadOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LeadInclude<ExtArgs> | null
}
